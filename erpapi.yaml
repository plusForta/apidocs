openapi: 3.0.0
info:
  description: |
    ## Overview
    The PlusForta ERP API is for the use of our ERP customers.

    ## How to sign up
    For more information, please contact us at info@plusforta.de.

    ## How to use

    ### Normal Process
    The process is quite simple.
    1. You submit application data under the ```/application``` endpoint with a POST.
    1. The system returns an ```OrderID``` for this application.
    1. Will now send an email to the end user prompting them to complete the application online and agree to the terms and conditions.
        1. Note: until the end user starts this process, the application may be updated by resubmitting the data with the ```orderId``` generated upon initial submission.
    1. After the insurance company processes the application, we will update the application with the new status

    ### Callbacks

    You can pass us a callback URL when creating the application. If you do so you will receive callbacks at certain points in the lifecycle of the application.
    1. When the customer submits the application to the insurance provider we will send the ```applicationSubmited``` callback
    1. When the insurance provider gives us a final answer on the application we will send the ```applicationProcessed``` callback
    1. When the email address is invalid or otherwise undeliverable we will send the ```emailBounced``` callback

    ### Custom ID

    We provide you with the ability to define a custom ID when creating the application data.  This custom ID will then be returned with all requests and can be used
    to retrive the matching record.

    **It is up the enduser to ensure the uniqueness of the custom ID field.**  We perform no processing on this field whatsoever.

    ### Security Nonce

    You can provide us with a securitynonce header in your POST or PATCH call and we will return the token in all of our callbacks.
    This token assures you that these responses match your original action.

    ## Cancelations

    To end the created Contract, simply call the ```cancel``` endpoint with any of the ```orderId```, ```customId```, or ```contractNumber``` identifiers.

    *Note: If you pass more than one identifier, they will be checked against each other.  If they don't match, a failure will be generated.*

    ## Notes about testing..

    Once you have the necessary credentials, you may feel free to start testing.  We recommend using the staging environment unless told otherwise.

    ## Changelog
    * alpha - document creation
    * 0.0.1alpha - internal only
    * 0.0.2alpha - internal only
    * 0.0.3alpha
        * improve error codes
    * 0.0.4alpha
        * added effective date to /cancel.
    * 0.0.5alpha
        * Correct account owner
        * monthlyRent now optional
        * Rental contract start is now optional
    * 0.0.6alpha
        * callbackURL is now optional.  If none supplied, callbacks are disabled.
        * added 403 status for PATCH after application has been submitted for processing
        * 404 status correctly coded
        * expanded callbacks to include a callback on submission to the insurance company and a callback on email bounces
        * add discussion about callbacks to header documentation
        * added GET method for application endpoint
    * 0.0.7
        * Changed PartnerId maximum length to 25
        * fixed contractId typo to contractNumber
    * 0.0.8
        * Re-added documentation about Security Nonce header
    * 0.0.9
        * Changed status codes for POST actions to 201
  version: "0.0.9"
  title: ERP API
  contact:
    email: admin@plusforta.de
#  license:
#    name: Apache 2.0
#    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: application
    description: Submit or update an application
  - name: cancel
    description: Submit the cancellation of an existing rental deposit guarantee
servers:
  - url: 'https://stage.aareal-aval.de/api/erp'
    description: Staging Environment usually mirrors Production, except when we are about to launch (then it's the next version)
  - url: 'https://dev.aareal-aval.de/api/erp'
    description: Developer Environment (has the latest code, may be broken)
  - url: 'https://aareal-aval.de/api/erp'
    description: Production Environment (the real deal.  If you submit applications here, you will be paying for them.  :) )
paths:
  /application:
    get:
      tags:
        - application
      security:
        - ApiKeyAuth: []
      summary: Retrieves an application
      operationId: getApplication
      description: |
        Retrieves an application
      responses:
        '200':
          description: application returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: validation failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
        '401':
          description: credentials for auth missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: 'No matching application found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: 'Internal Processing Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: orderId
          required: false
          example: '3034033'
          schema:
            type: string
          description: 'The plusForta generated order ID'
          in: query
        - name: customId
          required: false
          example: 'ACS3443-342'
          schema:
            type: string
          in: query
    post:
      tags:
        - application
      security:
        - ApiKeyAuth: []
      parameters:
        - in: header
          name: securitynonce
          schema:
            type: string
            maxLength: 255
          required: false
          description: Optional nonce to be returned in callbacks.
      summary: creates an application
      operationId: createApplication
      description: |
        Creates an application
      responses:
        '201':
          description: application created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '400':
          description: validation failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
        '401':
          description: credentials for auth missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: 'Internal Processing Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        description: data for creating an Application
      callbacks:
        applicationSubmitted:
          '{$request.body#/callbackUrl}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CallbackSubmit'
              responses:
                '204':
                  description: |
                    Everything is great!  Use this error code to let us know you have received the message
                '400':
                  description: |
                    Everything is bad! Use this error code to let us know you can't handle the news right now
                    and we should try again later.
        applicationProcessed:
          '{$request.body#/callbackUrl}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CallbackProcessed'
              responses:
                '204':
                  description: |
                    Everything is great!  Use this error code to let us know you have received the message
                '400':
                  description: |
                    Everything is bad! Use this error code to let us know you can't handle the news right now
                    and we should try again later.
        emailBounced:
          '{$request.body#/callbackUrl}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CallbackBounce'
              responses:
                '204':
                  description: |
                    Everything is great!  Use this error code to let us know you have received the message
                '400':
                  description: |
                    Everything is bad! Use this error code to let us know you can't handle the news right now
                    and we should try again later.
    patch:
      tags:
        - application
      security:
        - ApiKeyAuth: []
      parameters:
        - in: header
          name: securitynonce
          schema:
            type: string
            maxLength: 255
          required: false
          description: Optional nonce to be returned in callbacks.
      summary: updates an application
      operationId: updateApplication
      description: |
        Updates an existing application, also causes a new email to be sent to the customer.  Only possible before the customer has submitted the application.
      responses:
        '200':
          description: application updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '400':
          description: validation failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
        '401':
          description: credentials for auth missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: request denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Denied'
        '404':
          description: 'No matching application found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: 'Internal Processing Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationUpdate'
        description: Application Data
      callbacks:
        createContract:
          '{$request.body#/callbackUrl}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CallbackProcessed'
              responses:
                '200':
                  description: |
                    Everything is great!  Use this error code to let us know you have received the message
                '400':
                  description: |
                    Everything is bad! Use this error code to let us know you can't handle the news right now
                    and we should try again later.
  /cancel:
    post:
      tags:
        - cancel
      security:
        - ApiKeyAuth: []
      summary: cancels an existing application
      operationId: releaseObligation
      description: |
        Cancels an existing rental deposit guarantee
      responses:
        '201':
          description: obligation released
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelResponse'
        '400':
          description: validation failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
        '401':
          description: credentials for auth missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: 'No matching contract found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: 'Internal Processing Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cancel'
        description: 'data for cancelling an existing contract, must pass one of the following IDs: customId, contractNumber, or orderId'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Apikey
  schemas:
    CallbackProcessed:
      description: Generated when an application has a decision from the insurance provider
      type: object
      properties:
        type:
          type: string
          example: 'processed'
          enum:
            - 'processed'
        customId:
          type: string
          description: Customer supplied ID number
          example: "34234343XRA"
        orderId:
          type: number
          description: plusForta order ID
          example: '102343'
        contractNumber:
          type: string
          description: R+V supplied BürgschaftsNr
        contractStatus:
          type: string
          enum:
            - accepted
            - declined
          description: Insurance provider response to application
        contractStatusReason:
          description: Reason for decline
        securityNonce:
          type: string
          maxLength: 255
          description: Optionally returned nonce (if provided in initial POST/PATCH)
      required:
        - orderId
        - contractNumber
        - contractStatus
        - contractStatusReason
    CallbackSubmit:
      type: object
      properties:
        type:
          type: string
          example: 'submitted'
          enum:
            - 'submitted'
        customId:
          type: string
          description: Customer supplied ID number
          example: "34234343XRA"
        orderId:
          type: number
          description: plusForta order ID
          example: '102343'
        securityNonce:
          type: string
          maxLength: 255
          description: Optionally returned nonce (if provided in initial POST/PATCH)
      required:
        - orderId
        - type
    CallbackBounce:
      type: object
      properties:
        type:
          type: string
          example: 'bounced'
          enum:
            - 'bounced'
        customId:
          type: string
          description: Customer supplied ID number
        orderId:
          type: number
          description: plusForta order ID
          example: '102343'
        securityNonce:
          type: string
          maxLength: 255
          description: Optionally returned nonce (if provided in initial POST/PATCH)
      required:
        - orderId
        - contractStatus
        - contractStatusReason
    Application:
      required:
        - partnerId
        - lessee
        - lessor
        - apartment
        - bankAccount
      properties:
        status:
          type: string
          readOnly: true
          enum:
            - pending
            - accepted
            - declined
            - submitted
            - bounced
            - cancelled
        callbackUrl:
          type: string
          maxLength: 255
          description: 'URL to call upon contract creation'
          format: uri
          example: https://server.name/path
        partnerId:
          type: string
          maxLength: 25
          description: predefined partner ID (maps to EPP ID)
          example: 'xxx-3432-dasdf'
        customId:
          type: string
          description: Customer defined ID number for end to end tracking
          maxLength: 255
          example: 'DJF-KDF-KDL-KER'
        lessee:
          type: array
          maxItems: 2
          description: Information about the person (or persons) renting the apartment
          items:
            type: object
            required:
              - firstName
              - lastName
              - email
              - address
            properties:
              gender:
                type: string
                enum:
                  - m
                  - f
                maxLength: 1
              firstName:
                type: string
                example: Max
                maxLength: 255
              lastName:
                type: string
                example: Mustermann
                maxLength: 255
              birthdate:
                type: string
                format: date
                example: '1984-05-01'
                maxLength: 10
              email:
                type: string
                format: email
                example: 'max.mustermann@example.com'
                maxLength: 255
              phone:
                type: string
                format: phonenumber
                description: 'phone number of lessee (only German numbers, starting with 0, include area code)'
                example: "030 1234567"
                maxLength: 255
              address:
                type: object
                required:
                  - street
                  - houseNum
                  - zip
                  - city
                properties:
                  street:
                    type: string
                    example: Gaudystraße
                    maxLength: 255
                  houseNum:
                    type: string
                    example: 26A
                    maxLength: 255
                  zip:
                    type: string
                    example: 10439
                    maxLength: 16
                  city:
                    type: string
                    example: Berlin
                    maxLength: 255
              nationality:
                type: string
                example: DE
                maxLength: 2
                format: 2 Digit ISO Country Code
        lessor:
          description: |
            Landlord information
          type: object
          properties:
            person:
              description: Landlord
              type: object
              properties:
                gender:
                  type: string
                  enum:
                    - m
                    - f
                  maxLength: 1
                firstName:
                  type: string
                  example: Max
                  maxLength: 255
                lastName:
                  type: string
                  example: Mustermann
                  maxLength: 255
            company:
              description: Landlord company name (if this object is present, lessor.person is ignored)
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: Scrooge McDuck Rental
                  maxLength: 255
                name2:
                  type: string
                  example: Berlin Office
                  maxLength: 255
            address:
              type: object
              required:
                - street
                - houseNum
                - zip
                - city
              properties:
                street:
                  type: string
                  example: Gaudystraße
                  maxLength: 255
                houseNum:
                  type: string
                  example: 26A
                  maxLength: 255
                zip:
                  type: string
                  example: 10439
                  maxLength: 16
                city:
                  type: string
                  example: Berlin
                  maxLength: 255
        apartment:
          type: object
          required:
            - deposit
            - address
            - contractDates
          properties:
            depositPaid:
              description: Set to true if Deposit has already been paid, assumed to be false if not present
              type: boolean
            monthlyRent:
              description: 'Monthly cold rent'
              type: number
              format: float
              example: 500.00
            deposit:
              description: 'Deposit Amount'
              type: number
              format: float
              example: 1500.00
            contractDates:
              type: object
              required:
                - start
              properties:
                start:
                  description: 'Start of the rental contract in the format: YYYY-MM-DD'
                  example: '2019-02-01'
                  format: date
                  type: string
                end:
                  description: 'if the rental contract has an end date, include it here.  Format: YYYY-MM-DD'
                  example: '2020-02-01'
                  format: date
                  type: string
                signed:
                  description: 'Date contract was signed in the format: YYYY-MM-DD'
                  example: '2019-01-15'
                  format: date
                  type: string
            address:
              type: object
              required:
                - street
                - houseNum
                - zip
                - city
              description: Address of the rental properity
              properties:
                street:
                  type: string
                  example: Gaudystraße
                  maxLength: 255
                houseNum:
                  type: string
                  example: 26A
                  maxLength: 255
                zip:
                  type: string
                  example: 10439
                  maxLength: 16
                city:
                  type: string
                  example: Berlin
                  maxLength: 255
        bankAccount:
          type: object
          required:
            - owner
            - iban
          properties:
            owner:
              type: string
              description: Account owner
              example: 'Max Mustermann'
            bankName:
              description: Name of the bank if available
              type: string
              example: DKB
            iban:
              type: string
              format: iban
              example: DE12500105170648489890
            paymentFrequency:
              type: string
              enum:
                - 'monthly'
                - 'yearly'
    ApplicationUpdate:
      allOf:
        - type: object
          required:
            - orderId
          properties:
            orderId:
              type: number
              description: 'Previously assigned plusforta ID'
              example: 1043324
        - $ref: '#/components/schemas/Application'
    ApplicationResponse:
      properties:
        customId:
          type: string
          description: Customer defined ID number for end to end tracking
          maxLength: 255
          example: 'DJF-KDF-KDL-KER'
        orderId:
          type: number
          description: plusForta generated ID for this application
          example: 1043324
        contractNumber:
          type: string
          description: Insurer generated contract ID number
          example: 'VS3432345-00001'
    Cancel:
      description: Requires one of customId, contractNumber, or orderId
      properties:
        customId:
          type: string
          description: Customer defined ID number for end to end tracking
          maxLength: 255
          example: 'DJF-KDF-KDL-KER'
        orderId:
          type: number
          description: plusForta generated ID for this application
          example: 1043324
        contractNumber:
          type: string
          description: Insurer generated contract ID number
          example: 'VS3432345-00001'
        effectiveDate:
          type: string
          format: date
          example: '1984-05-01'
          maxLength: 10
          description: The future date the coverage should be ended.  If blank, effective immediately.
    CancelResponse:
      required:
        - orderId
      properties:
        customId:
          type: string
          description: Customer defined ID number for end to end tracking
          maxLength: 255
          example: 'DJF-KDF-KDL-KER'
        orderId:
          type: number
          description: plusForta generated ID for this application
          example: 1043324
        contractNumber:
          type: string
          description: Insurer generated contract ID number
          example: 'VS3432345-00001'
    ApplicationErrorResponse:
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              errorType:
                type: string
                example: 'Validation'
              errorList:
                description: |
                  a list of fields with an array of errors.
                type: object
                properties:
                  apartment.address.street:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: 'REQFLD'
                        message:
                          type: string
                          example: 'Required Field lessee.address.street missing'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - message
    NotFound:
      type: object
      properties:
        code:
          type: string
          example: 'NOTFOUND'
        message:
          type: string
          example: 'Object not found'
      required:
        - message
    Unauthorized:
      type: object
      properties:
        code:
          type: string
          example: 'NOAUTH'
        message:
          type: string
          example: 'Credentials for auth missing'
    Denied:
      type: object
      properties:
        code:
          type: string
          example: 'BLOCKED'
        message:
          type: string
          example: 'Requested action is not possible'
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
