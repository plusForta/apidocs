openapi: 3.0.0
info:
  description: |
    ## Overview
    The PlusForta ERP API is for the use of our ERP customers of the BK01 application.

    ## How to use

    The process is quite simple.  You can submit an application data under the ```/application``` endpoint.  You will recieve an ```OrderID``` for this application.

    This generates an email to the end user prompting them to complete the application online and agree to the terms and conditions.

    Until the end user starts this process, the application may be updated by resubmitting the data with the ```orderId``` generated upon initial submission.

    Once the enduser completes the process, you will receive a callback at the requested URL informing you with the result of the application, either accpeted or declined.

    To end the created Contract, simply call the ```cancel``` endpoint with any of the ```orderId```, ```customId```, or ```contractNumber``` identifiers.

    *Note: If you pass more than one identifier, they will be checked against each other.  If they don't match, a failure will be generated.*

    ## How to sign up
    For more information, please contact us at info@plusforta.de.

    ## Changelog
    * v0.0.1
      * first draft
  version: "0.0.1alpha"
  title: ERP API
  contact:
    email: admin@plusforta.de
#  license:
#    name: Apache 2.0
#    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: application
    description: Submit or update an application
  - name: cancel
    description: Submit the cancellation of an existing rental deposit guarantee
servers:
  - url: 'https://oa-stage.pfdev.de/api/erp'
    description: Staging Environment usually mirrors Production, except when we are about to launch (then it's the next version)
  - url: 'https://api.kautionsfrei.de/api/erp'
    description: Production Environment (the real deal.  If you submit applications here, you will be paying for them.  :) )
  - url: 'https://oa-dev.pfdev.de/api/erp'
    description: Developer Environment (has the latest code, maybe broken)
paths:
  /application:
    post:
      tags:
        - application
      security:
        - ApiKeyAuth: []
      summary: creates or updates an application
      operationId: createApplication
      description: |
        Allows the creation of an application
      responses:
        '200':
          description: application created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '400':
          description: validation failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
        '401':
          description: credentials for auth missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        description: data for creating an Application
      callbacks:
        createContract:
          '{$request.body#/callbackUrl}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Callback'
              responses:
                '200':
                  description: |
                    Everything is great!  Use this error code to let us know you have received the message
                '400':
                  description: |
                    Everything is bad! Use this error code to let us know you can't handle the news right now
                    and we should try again later.
  /cancel:
    post:
      tags:
        - cancel
      security:
        - ApiKeyAuth: []
      summary: cancels an existing application
      operationId: releaseObligation
      description: |
        Cancels an existing rental deposit guarantee
      responses:
        '200':
          description: obligation released
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelResponse'
        '400':
          description: validation failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
        '401':
          description: credentials for auth missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cancel'
        description: 'data for cancelling an existing contract, must pass one of the following IDs: customId, contractId, or orderId'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Apikey
  schemas:
    Callback:
      type: object
      properties:
        customId:
          type: string
          description: Customer supplied ID number
        orderId:
          type: number
          description: plusForta order ID
        contractNumber:
          type: string
          description: R+V supplied BürgschaftsNr
        contractStatus:
          type: string
          enum:
            - accepted
            - declined
          description: Insurance provider response to application
        contractStatusReason:
          description: Reason for decline
      required:
        - orderId
        - contractNumber
        - contractStatus
        - contractStatusReason
    Application:
      required:
        - callbackUrl
        - partnerId
        - lessee
        - lessor
        - apartment
        - bankAccount
      properties:
        callbackUrl:
          type: string
          maxLength: 255
          description: 'URL to call upon contract creation'
          format: uri
          example: https://server.name/path
        partnerId:
          type: string
          maxLength: 255
          description: predefined partner ID (maps to EPP ID)
          example: 'xxx-3432-dasdf'
        customId:
          type: string
          description: Customer defined ID number for end to end tracking
          maxLength: 255
          example: 'DJF-KDF-KDL-KER'
        orderId:
          type: number
          description: '*Must* be passed on updates, *must* be blank for new submissions'
        lessee:
          type: array
          maxItems: 2
          description: Information about the person (or persons) renting the apartment
          items:
            type: object
            required:
              - firstName
              - lastName
              - email
              - address
            properties:
              gender:
                type: string
                enum:
                  - m
                  - f
                maxLength: 1
              firstName:
                type: string
                example: Max
                maxLength: 255
              lastName:
                type: string
                example: Mustermann
                maxLength: 255
              birthdate:
                type: string
                format: date
                example: '1984-05-01'
                maxLength: 10
              email:
                type: string
                format: email
                example: 'max.mustermann@example.com'
                maxLength: 255
              phone:
                type: string
                format: phonenumber
                description: 'phone number of lessee (only German numbers, starting with 0, include area code)'
                example: "030 1234567"
                maxLength: 255
              address:
                type: object
                required:
                  - street
                  - houseNum
                  - zip
                  - city
                properties:
                  street:
                    type: string
                    example: Gaudystraße
                    maxLength: 255
                  houseNum:
                    type: string
                    example: 26A
                    maxLength: 255
                  zip:
                    type: string
                    example: 10439
                    maxLength: 16
                  city:
                    type: string
                    example: Berlin
                    maxLength: 255
              nationality:
                type: string
                example: DE
                maxLength: 2
                format: 2 Digit ISO Country Code
        lessor:
          description: |
            Landlord information
          type: object
          properties:
            person:
              description: Landlord
              type: object
              properties:
                gender:
                  type: string
                  enum:
                    - m
                    - f
                  maxLength: 1
                firstName:
                  type: string
                  example: Max
                  maxLength: 255
                lastName:
                  type: string
                  example: Mustermann
                  maxLength: 255
            company:
              description: Landlord company name (if this object is present, lessor.person is ignored)
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: Scrooge McDuck Rental
                  maxLength: 255
                name2:
                  type: string
                  example: Berlin Office
                  maxLength: 255
            address:
              type: object
              required:
                - street
                - houseNum
                - zip
                - city
              properties:
                street:
                  type: string
                  example: Gaudystraße
                  maxLength: 255
                houseNum:
                  type: string
                  example: 26A
                  maxLength: 255
                zip:
                  type: string
                  example: 10439
                  maxLength: 16
                city:
                  type: string
                  example: Berlin
                  maxLength: 255
        apartment:
          type: object
          required:
            - monthlyRent
            - deposit
            - address
            - contractDates
          properties:
            depositPaid:
              description: Set to true if Deposit has already been paid, assumed to be false if not present
              type: boolean
            monthlyRent:
              description: 'Monthly cold rent'
              type: number
              format: float
              example: 500.00
            deposit:
              description: 'Deposit Amount'
              type: number
              format: float
              example: 1500.00
            contractDates:
              type: object
              required:
                - start
                - signed
              properties:
                start:
                  description: 'Start of the rental contract in the format: YYYY-MM-DD'
                  example: '2019-02-01'
                  format: date
                  type: string
                end:
                  description: 'if the rental contract has an end date, include it here.  Format: YYYY-MM-DD'
                  example: '2020-02-01'
                  format: date
                  type: string
                signed:
                  description: 'Date contract was signed in the format: YYYY-MM-DD'
                  example: '2019-01-15'
                  format: date
                  type: string
            address:
              type: object
              required:
                - street
                - houseNum
                - zip
                - city
              description: Address of the rental properity
              properties:
                street:
                  type: string
                  example: Gaudystraße
                  maxLength: 255
                houseNum:
                  type: string
                  example: 26A
                  maxLength: 255
                zip:
                  type: string
                  example: 10439
                  maxLength: 16
                city:
                  type: string
                  example: Berlin
                  maxLength: 255
        bankAccount:
          type: object
          required:
            - owner
            - iban
          properties:
            owner:
              type: object
              description: Account owner
              properties:
                firstName:
                  type: string
                  example: Max
                lastName:
                  type: string
                  example: Mustermann
            bankName:
              description: Name of the bank if available
              type: string
              example: DKB
            iban:
              type: string
              format: iban
              example: DE12500105170648489890
            paymentFrequency:
              type: string
              enum:
                - 'monthly'
                - 'yearly'
    ApplicationResponse:
      properties:
        customId:
          type: string
          description: Customer defined ID number for end to end tracking
          maxLength: 255
          example: 'DJF-KDF-KDL-KER'
        orderId:
          type: number
          description: plusForta generated ID for this application
          example: 1043324
        contractId:
          type: string
          description: Insurer generated contract ID number
          example: 'VS3432345-00001'
    Cancel:
      description: Requires one of customId, contractId, or orderId
      properties:
        customId:
          type: string
          description: Customer defined ID number for end to end tracking
          maxLength: 255
          example: 'DJF-KDF-KDL-KER'
        orderId:
          type: number
          description: plusForta generated ID for this application
          example: 1043324
        contractId:
          type: string
          description: Insurer generated contract ID number
          example: 'VS3432345-00001'
    cancelResponse:
      required:
        - orderId
      properties:
        customId:
          type: string
          description: Customer defined ID number for end to end tracking
          maxLength: 255
          example: 'DJF-KDF-KDL-KER'
        orderId:
          type: number
          description: plusForta generated ID for this application
          example: 1043324
        contractId:
          type: string
          description: Insurer generated contract ID number
          example: 'VS3432345-00001'
    ApplicationErrorResponse:
      properties:
        error:
          type: string
          example: 'lessee_attributes.terms_accepted : must be accepted'
        error_struct:
          description: |
            a list of fields that have errors. For the above example, it would be a field named 'lessee_attributes.terms_accepted' with the value of an array, with a single string, 'must be accepted'
          type: object
          # This could be better. See https://swagger.io/docs/specification/data-models/dictionaries/
          # the returned object looks like this:
          # {
          #   "error": "lessee_attributes.terms_accepted : must be accepted",
          #   "error_struct": {
          #     "lessee_attributes.terms_accepted": [
          #       "must be accepted"
          #     ]
          #   }
          # }
          additionalProperties: true
    Error:
      type: object
      properties:
        # code:
        #   type: string
        message:
          type: string
      required:
        # - code
        - message
    Unauthorized:
      type: object
      properties:
        error:
          example: credentials for auth missing
          type: string

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
